Define aitken()=
Prgm
:Local pn,pn1,pn2,pg,pg1,gx,nmax,ep,err,ab
:Try
:  Request "g(x) function: ",gx,0,ab
:Else
:  Goto end
:EndTry
:If ab=0 Then
:  Goto end
:EndIf
:Try
:  Request "Pn:",pn,0,ab
:Else
:  Goto end
:EndTry
:If ab=0 Then
:  Goto end
:EndIf
:Try
:  Request "Epsilon: ",ep,0,ab
:Else
:  Goto end
:EndTry
:If ab=0 Then
:  Goto end
:EndIf
:Try
:  Request "Max number of iterations before forced exit:",nmax,0,ab
:Else
:  Goto end
:EndTry
:If ab=0 Then
:  Goto end
:EndIf
:  Disp "k     pn      pn1     pn2      pg     err"
:  k:=0
:  pn1:=gx|x=pn
:  pn2:=gx|x=pn1
:  While k<nmax
:    pg1:=pn-(((pn1-pn)^(2))/(pn2-2*pn1+pn))
:    If k>0 Then
:      err:=abs(pg1-pg)
:    Else
:      err:=1000
:    EndIf
:    Disp k,"     ",format(pn,"F9"),"     ",format(pn1,"F9"),"     ",format(pn2,"F9"),"     ",format(pg1,"F9"),"     ",format(err,"F9")
:    Disp "____________________________________"
:    If err≤ep Then
:      Disp "The method converges in  ",k," iterations"
:      Disp "The root it found was: ",format(pg1,"F9")
:      Return 
:    Else
:      k:=k+1
:    EndIf
:    pn:=pn1
:    pn1:=pn2
:    pn2:=gx|x=pn2
:    pg:=pg1
:  EndWhile
:  If k≥nmax Then
:    Disp "The method diverges after ",k+1," iterations"
:  EndIf
:  Lbl end
:EndPrgm